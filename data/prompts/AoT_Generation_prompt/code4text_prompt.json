{
    "system_prompt": "You are a powerful reasoning model and Python coder. I will present you with a question and the correct answer.\nYour task is to output a Python program to meet the following requirements.\n\n- The code can answer the question and print the correct answer.\n- Divide the code into several functional blocks. Each functional block implements a simple function.\n- Describe what the function does in the comment lines following the function name. Comments should be as concise as possible.\n- Define a `main` function to call other functions to answer the question.\n- The main function should contain arguments transformed by the conditions in the question. The other functions should be as generic as possible.\n- After the program, state the final answer as \"The answer is \\boxed{answer}\".\n",
    "examples": [
        {
            "user": "Two teams are playing in a stadium with a capacity of 2000 people. The total number of people in the stadium is 3/4 of the total capacity and each person paid $20 in entry fees. What is the difference between the total amount of fees collected when the stadium was 3/4 full and if the stadium would have been full?\n\nCorrect Answer: 10000\n",
            "assistant": "Here is a Python program to answer the question:\n\n```python\ndef calculate_fee(capacity, fraction, fee_per_person):\n    \"\"\"\n    Calculate total fees from the number of attendees (calculated from capacity and fraction) and entry fee.\n    \"\"\"\n    total_people = capacity * fraction\n    total_fee = total_people * fee_per_person\n    return total_fee\n\ndef calculate_difference(capacity, fraction1, fraction2, fee_per_person):\n    \"\"\"\n   Calculate the difference in collected fees for two different attendance fractions.\n    \"\"\"\n    fees1 = calculate_fee(capacity, fraction1, fee_per_person)\n    fees2 = calculate_fee(capacity, fraction2, fee_per_person)\n    difference = abs(fees1 - fees2)\n    return difference\n\ndef main():\n    \"\"\"\n    The main function that calls the other functions and prints the answer.\n    \"\"\"\n    capacity = 2000\n    fraction1 = 1\n    fraction2 = 3/4\n    fee_per_person = 20\n    difference = calculate_difference(capacity, fraction1, fraction2, fee_per_person)\n    print(difference)\n\nmain()\n```\n\nThe answer is \\boxed{10000}.\n"
        },
        {
            "user": "In this task, answer 'Yes' if the frequency of the given word in the two sentences is equal, else answer 'No'.\n\nSentence1: 'a little boy that is holding a skateboard', Sentence2: 'this photo displays a messy desk that has two laptops on it among many other things'. Is the frequency of the word 'a' in two sentences equal?\n\nCorrect Answer: No\n",
            "assistant": "Here is a Python program to answer the question:\n\n```python\ndef count_word_frequency(sentence, word):\n    \"\"\"\n    Count the frequency of a given word in a sentence.\n    \"\"\"\n    words = sentence.split()\n    count = words.count(word)\n    return count\n\ndef compare_word_frequency(sentence1, sentence2, word):\n    \"\"\"\n    Compare the frequency of a given word in two sentences.\n    \"\"\"\n    count1 = count_word_frequency(sentence1, word)\n    count2 = count_word_frequency(sentence2, word)\n    return count1 == count2\n\ndef main():\n    \"\"\"\n    The main function that calls the other functions and prints the answer.\n    \"\"\"\n    sentence1 = 'a little boy that is holding a skateboard'\n    sentence2 = 'this photo displays a messy desk that has two laptops on it among many other things'\n    word = 'a'\n    is_equal = compare_word_frequency(sentence1, sentence2, word)\n    print('Yes' if is_equal else 'No')\n\nmain()\n```\n\nThe answer is \\boxed{No}.\n"
        },
        {
            "user": "This task evaluates for the ability to follow basic natural language instructions nested and performing a sequence of operations, including basic logic and conditionals.\n\nsay python twice and data once, and then repeat all of this three times.\n\nCorrect Answer: python python data python python data python python data\n",
            "assistant": "Here is a Python program to answer the question:\n\n```python\ndef repeat_words(words, counts):\n    \"\"\"\n    Repeat a list of words a given number of times.\n    \"\"\"\n    repeated_words = [word for word, count in zip(words, counts) for _ in range(count)]\n    return ' '.join(repeated_words)\n\ndef repeat_sequence(sequence, repeats):\n    \"\"\"\n    Repeat a sequence a given number of times.\n    \"\"\"\n    return ' '.join([sequence]*repeats)\n\ndef main():\n    \"\"\"\n    The main function that calls the other functions and prints the answer.\n    \"\"\"\n    words = ['python', 'data']\n    counts = [2, 1]\n    sequence = repeat_words(words, counts)\n    answer = repeat_sequence(sequence, 3)\n    print(answer)\n\nmain()\n```\n\nThe answer is \\boxed{python python data python python data python python data}.\n"
        }
    ]
}